Início: Aula 01 

Linguagem C é linguagem de alto nível, pois abrange os processadores, acima do assembly, portanto se caracteriza como linguagem de alto nível.
No entanto, foi desenvolvida para ser logo no nível acima, é uma linguagem de alto desempenho por ser compilada.

    Bibliotecas:

        <stdio.h> - Principal para qualquer programa.


    Função:

        int main(){} - Deve sempre no final do programa incrementar o [return 0].

        int main(void) {} - Não é necessário incrementar o [return 0] no final do programa.
        
________________________________________________________________

Aula 02 DEBUGAR:

Encontrar erros semânticos, erros semânticos são diferentes dos erros de sintáxe, pois é da responsabilidade do programador, o programa não tem capacidade de indentificar. Erro de sintáxe é a estrutura do comando, que o próprio programa irá indentificar e avisar.

Não é possível debugar arquivos-fonte isolados. É necessário criar todo o projeto.

Ajuda muito para corrigir um programa, é um esquema PASSO-A-PASSO das linhas.
________________________________________________________________
Aula 02

Para [PRINTF]
Especificadores de formato 

        Identificador                   Formato

        %d ou %i                        Inteiro decimal
        %c                              Caracter simples
        %s                              Cadeia de Caracter
        %f                              Ponto Flutuante (decimal)
        %e                              Ponto Flutuante (notação exponencial)
        %g                              Usa o %f ou o %e mais curto
        %lf                             Tipo double
        %u                              -
        %o                              -
        %x                              Números inteiros em base hexadecimal
        .<num>                          Especifica quantos dígitos serão impressos após vírgula Exemplo: "%.2f"
================================================================
Sequência de escape
        Escape                          Descrição

        \a                              Toca um bipe, alarme sonoro padrão do sistema
        \b                              Backspace
        \n                              Quebra de linha
        \t                              Tabulação horizontal(TAB)
        \r                              Retorna ao início da linha
        \0                              Caractere nulo
        \v                              Tabulação vertical
        
        \\                              Caractere \
        \'                              Caractere '
        \"                              Caractere "
        \?                              Caractere ?
        \123                            Caractere relacionado ao código 123 em octal (ASCII) - 123 é um exemplo na tabela 
        \x12                            Caractere relacionado ao código 12 em hexadecimal (ASCII) -x12 é um exemplo na tabela
        %%                              Caractere %
_____________________________________________________________
Para [SCANF]

Sintaxe:

    scanf(<formato especificado>, &<variável1>, &<variavel2>);  LEMBRAR DO "&"!

            **No momento em que especificar o formmato da variável, e houver mais de uma variável é necessário especificar o formato na mesma quantidade de variáveis, o programa irá ler respectivamente, formato1, formato2, variavel1, variavel2, assim sucessivamente.**

os Especificadores de formato são os mesmos do [PRINTF], exceto;

        chars - O chars lê todos os dados digitados, exceto os especificados em "chars".

        Identificador                       Formato

        %d                  bool           Booleano (Verdadeiro = 1 ou Falso = 0)
        %d ou %i            int            Inteiro decimal         
        %c                              Caracter simples
        %s                  char           Cadeia de Caracter
        %f                  float          Ponto Flutuante (decimal)
        %e                              Ponto Flutuante (notação exponencial)
        %g                              Usa o %f ou o %e mais curto
        %lf                 double            Tipo double
        %u                              -
        %o                              -
        %x                              Números inteiros em base hexadecimal

        Exemplo:

            #include <stdlib.h>

            int main() {

                int idade = 0;
                int ano = 1950;                    

                printf("Informe a idade e o ano que desejar:\n");
                scanf("%d %d", &idade, &ano);

                printf("A idade digita eh, %d.\n", idade);
                printf("O ano informado eh, %d.\n", ano);
        
            system("pause");
            }
_____________________________________________________________
Aula 03

Como na pseudo-linguagem, é necessário primeiramente fazer a declaração da variável.

            <tipo> <nome>

Nomenclatura:
    -Não pode iniciar com Números.
    -Não pode caracteres especiais.
    -Não pode haver espaço.
 
 Operadores:
                Mesmo método do Portugol.

    = Atribuição
    == Comparação (igual)

    Para constantes:
        A diretiva "#define", cria-se um identificador para um dado de qualquer tipo.

            Exemplo de uma declaração de constante, faz com que não permita a modificação do valor:
                
                 #define <nome> <valor>
________________________________________________________________
Aula 04

Operadores:

    Soma: +     |       Subtração: -       |      Multiplicação: *      |      Divisão: /     |     Resto de divisão inteira: %

Obs: Existe precedência entre operadores. Multiplicação, Divisão, primeiro que soma e subtração. Entre parênteses "()" tem a maior precedência dos demais. Como na matemática.

    Operadores de atribuição:

    ++ : Incremento de 1 unidade.
    -- : Decremento em 1 unidade.
    += : Incremento Genérico
    -= : Decremento Genérico
    *= : Atribuição com Multiplicação
    /= : Atribuição com Divisão

            Igualmente com o Portugol Studio.
_____________________________________________________________
Aula 05

    Condicionante IF.
        Como no Portugol Studio, utiliza-se os mesmos operadores relacionais:
        _____________________________________________________________
       | Maior: >                |       Menor: <                   |
       | -----------------------------------------------            |
       | Maior ou igual: >=      |       Menor ou igual: <=         |
       | -----------------------------------------------            |
       | Igual: ==               |       Diferente: !=              |
       |____________________________________________________________|
    
    Operadores Condicionantes juntamente com Operadores Lógicos:

        # Conjunção: 
            No Portugol Studio, utilizamos o operador "e". Só é verdadeiro quando tudo for verdadeiro. Em C, utiliza "&&"

        # Disjunção:
            No Portugol Studio, utilizamos o operador "ou". Só é verdadeiro se um ao menos um caso for verdadeiro. Em C, utiliza "||"

        # Negação:
            No Portugol Studio, utilizamos o operador "!=". Só é verdadeiro quando tudo for falso. Em C, utiliza "!"

        _____________________________________________________________
       |            E            |              &&                  |
       | -----------------------------------------------            |
       |            OU           |              ||                  |
       | -----------------------------------------------            |
       |         NEGAÇÂO         |              !                   |
       |____________________________________________________________|

       Utilização do ELSE:

       Do mesmo formato que no Portugol Studio.

       Se - IF
       Senao SE - Else IF
       Senao - Else

       # Lembrando que a identação é a seguinte:
        ______________________________
       | if ( <condição> ) {          |
       |     <procedimento>           |
       | } else if ( <condição> ) {   |
       |     <procedimento>           |
       | } else {                     |
       |     <procedimento>           |
       | }                            |
       |______________________________|
_____________________________________________________________
Aula 06

    Condicionante SWITCH - CASE (Escolha-Caso)

        No memso funcionamento do Portugol Studio. Comparação da variável, e entrada no bloco.
        
        Logo: 

        ____________________________________
        |   SWITCH      |   Escolha         |
        |   CASE        |   Caso            |
        |   BREAK       |   Pare            |
        |   DEFAULT     |   Caso contrario  |
        |___________________________________|

            Ex:
               ______________________________________
              |  switch(<var>) {                     |
              |      case <v1> :                     |
              |          <bloco_de_comandos1>        |
              |          break;                      |
              |                                      |
              |      case <v2> :                     |
              |          <bloco_de_comandos2>        |
              |          break;                      |
              |      ...                             |
              |      case <vN> :                     |
              |          <bloco_de_comandosN>        |
              |          break;                      |
              |                                      |
              |      default:                        |
              |          <bloco_de_comandos_padrão>  |
              |          break;                      |
              |  }                                   |
              |______________________________________|
____________________________________________________________

system("cls"); - limpa() - limpar a tela.

Utilização do [return 0;]:
___________________________________________________________________________________________________________
|int main() {                                                                                              |
|                                                                                                          |
|    //programa//                                                                                          |
|                                                                                                          |
|    return 0;  -- É necessário incrementar o return 0; pois a função main() é int, logo o retorno é zero. |
|}                                                                                                         |
|__________________________________________________________________________________________________________|

    Laço de repetição:

        FOR - (para):

            for (inicialização; condição; incremento/decremento) {
                //processo//
            }
___________________________________________________________________________________________________________
        While - enquanto;

            while (condição) {
                //processo//
            }
___________________________________________________________________________________________________________
        Do while - Faça enquanto:

            do {
                //processo//
            } while (condição);
___________________________________________________________________________________________________________




