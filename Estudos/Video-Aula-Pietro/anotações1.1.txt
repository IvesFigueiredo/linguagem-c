Início: Aula 01 

Linguagem C é linguagem de alto nível, pois abrange os processadores, acima do assembly, portanto se caracteriza como linguagem de alto nível.
No entanto, foi desenvolvida para ser logo no nível acima, é uma linguagem de alto desempenho por ser compilada.
________________________________________________________________

Aula 02 DEBUGAR:

Encontrar erros semânticos, erros semânticos são diferentes dos erros de sintáxe, pois é da responsabilidade do programador, o programa não tem capacidade de indentificar. Erro de sintáxe é a estrutura do comando, que o próprio programa irá indentificar e avisar.

Não é possível debugar arquivos-fonte isolados. É necessário criar todo o projeto.

Ajuda muito para corrigir um programa, é um esquema PASSO-A-PASSO das linhas.
________________________________________________________________
Para [PRINTF]
Especificadores de formato 

        Identificador                   Formato

        %d ou %i                        Inteiro decimal
        %c                              Caracter simples
        %s                              Cadeia de Caracter
        %f                              Ponto Flutuante (decimal)
        %e                              Ponto Flutuante (notação exponencial)
        %g                              Usa o %f ou o %e mais curto
        %lf                             Tipo double
        %u                              -
        %o                              -
        %x                              Números inteiros em base hexadecimal
        .<num>                          Especifica quantos dígitos serão impressos após vírgula Exemplo: "%.2f"
================================================================
Sequência de escape
        Escape                          Descrição

        \a                              Toca um bipe, alarme sonoro padrão do sistema
        \b                              Backspace
        \n                              Quebra de linha
        \t                              Tabulação horizontal(TAB)
        \r                              Retorna ao início da linha
        \0                              Caractere nulo
        \v                              Tabulação vertical
        
        \\                              Caractere \
        \'                              Caractere '
        \"                              Caractere "
        \?                              Caractere ?
        \123                            Caractere relacionado ao código 123 em octal (ASCII) - 123 é um exemplo na tabela 
        \x12                            Caractere relacionado ao código 12 em hexadecimal (ASCII) -x12 é um exemplo na tabela
        %%                              Caractere %
_____________________________________________________________
Para [SCANF]

Sintaxe:

    scanf(<formato especificado>, &<variável1>, &<variavel2>);  LEMBRAR DO "&"!

            **No momento em que especificar o formmato da variável, e houver mais de uma variável é necessário especificar o formato na mesma quantidade de variáveis, o programa irá ler respectivamente, formato1, formato2, variavel1, variavel2, assim sucessivamente.**

os Especificadores de formato são os mesmos do [PRINTF], exceto;

        chars - O chars lê todos os dados digitados, exceto os especificados em "chars".

        Identificador                       Formato

        %d ou %i            int            Inteiro decimal         
        %c                              Caracter simples
        %s                              Cadeia de Caracter
        %f                  float          Ponto Flutuante (decimal)
        %e                              Ponto Flutuante (notação exponencial)
        %g                              Usa o %f ou o %e mais curto
        %lf                             Tipo double
        %u                              -
        %o                              -
        %x                              Números inteiros em base hexadecimal

        Exemplo:

